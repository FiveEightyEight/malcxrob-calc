{"version":3,"sources":["components/buttons.js","components/display.js","containers/calculator.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","color","setState","backgroundColor","clickedOn","state","boxShadow","clickedOff","undefined","fontSize","textAlign","borderLeft","borderBottom","userSelect","cursor","outline","display","react_default","a","createElement","Fragment","type","className","onMouseDown","onMouseUp","style","onClick","getValue","value","name","React","Component","Display","Calculator","addNumbers","b","subtractNumbers","multiplyNumbers","divideNumbers","percent","num","previous","posAndNeg","decimal","handleButtonEvent","e","target","previousValue","operation","displayValue","includes","handleOperationEvent","waitingForNewValue","currentDisplay","tempStr","Number","operate","console","log","sum","toString","difference","quotient","product","handleClearButton","buttons","handleDynamicDisplay","length","components_display","prevProps","prevState","App","margin","width","calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.952c06d0.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Buttons extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n            'backgroundColor': '#E0E0E6',\n            'fontSize': '40px',\n            'textAlign': 'center',\n            'color': '#666666',\n            'borderLeft': '1px solid #666666',\n            'borderBottom': '1px solid #666666',\n            'userSelect': 'none',\n            'cursor': 'pointer',\n            'outline': 'none',\n            // '-webkit-tap-highlight-color': 'rgba(0,0,0,0)',\n            'display': 'block',\n\n        }\n    }\n\n    componentWillMount = () => {\n        if (this.props.color) {\n            \n            switch(this.props.color) {\n\n                case 'orange':\n                this.setState({'backgroundColor': '#EE9B3E','color': '#fff',})\n                break;\n\n                default:\n                break;\n            }\n        }\n        return;\n    }\n\n\n    clickedOn = () => {\n        if (!this.state['boxShadow']) {\n            this.setState({'boxShadow': 'inset 0px 0px 80px 0px rgba(0,0,0,0.25)'});\n        } else {\n            return;\n        }\n\n    }\n\n    clickedOff = () => {\n        if (this.state['boxShadow']) {\n            this.setState({'boxShadow': undefined});\n        } else {\n            return;\n        }\n    }\n\n\n\n\n    render() {\n        return (\n            <>\n                <button type='button' className={this.props.className}  onMouseDown={this.clickedOn} onMouseUp={this.clickedOff} style={this.state} onClick={this.props.getValue} value={this.props.value}>{this.props.name}</button>\n            </>\n        )\n    }\n}\n\nexport default Buttons;","import React from 'react';\n\n// overflow-auto display-4 text-light p-1 col-12   --- display className\nconst Display = (props) => {\n    return (\n        <>\n\n                <div className={props.className}><strong>{props.value}</strong></div>\n\n        </>\n    )\n}\n\nexport default Display;","import React from 'react'\nimport Buttons from '../components/buttons';\nimport Display from '../components/display';\n\n\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayValue: 0,\n            previousValue: null,\n            operation: null,\n            waitingForNewValue: false\n        }\n    }\n    addNumbers = (a, b) => {\n        const num = a + b\n        return num;\n    }\n    subtractNumbers = (a, b) => {\n        const num = a - b\n        return num;\n    }\n    multiplyNumbers = (a, b) => {\n        const num = a * b\n        return num;\n    }\n    divideNumbers = (a, b) => {\n        const num = a / b\n        return num;\n    }\n    percent = (num, previous) => {\n        if (previous === 0) {\n            previous = 1;\n        }\n        return (num * previous) / 100;\n    }\n    posAndNeg = (num) => {\n        return num * -1;\n    }\n    decimal = (num) => {\n        return num + '.';\n    }\n    handleButtonEvent = (e) => {\n        const value = e.target.value;\n        const operation = ['addition', 'subtract', 'divide', 'multiply', 'percent', 'abs', 'equal', 'decimal'];\n\n        if (value === 'C') {\n            if (!this.state.previousValue && this.state.operation) {\n                this.setState({\n                    operation: null,\n                })\n                return;\n            }\n            this.setState({\n                displayValue: 0,\n            })\n            return;\n        }\n        if (value === 'AC') {\n            this.setState({\n                displayValue: 0,\n                previousValue: null,\n                operation: null,\n                waitingForNewValue: false\n            })\n            return;\n        }\n        if (operation.includes(value)) {\n            this.handleOperationEvent(e);\n            return;\n        }\n        if (this.state.displayValue === '0' || this.state.displayValue === 0) {\n            this.setState({\n                displayValue: value,\n            })\n            return;\n        }\n        if (this.state.waitingForNewValue) {\n            const currentDisplay = this.state.displayValue;\n            this.setState({\n                previousValue: currentDisplay,\n                displayValue: value,\n                waitingForNewValue: false,\n            })\n        } else {\n            let tempStr = this.state.displayValue;\n            tempStr += value;\n            this.setState({\n                displayValue: tempStr,\n            })\n        }\n    }\n    handleOperationEvent = (e) => {\n        const previous = Number(this.state.previousValue);\n        const display = Number(this.state.displayValue);\n        const value = e.target.value;\n        const operate = this.state.operation;\n        if (value === 'decimal') {\n            if (this.state.waitingForNewValue) {\n                this.setState({\n                    displayValue: '0.',\n                    waitingForNewValue: false,\n                })\n                return;\n            }\n            let tempStr = '';\n            if (!this.state.displayValue) {\n                tempStr = '0'\n            } else {\n                tempStr = this.state.displayValue;\n            }\n            if (tempStr.includes('.')) {\n                return;\n            }\n            tempStr += '.'\n            this.setState({\n                displayValue: tempStr,\n            })\n            return;\n        }\n        if (operate === 'equal' && value === 'equal') {\n            return;\n        }\n        if (!operate && value === 'equal') {\n            return;\n        }\n        if (value === 'percent') {\n            const num = this.percent(display, previous).toString();\n            this.setState({\n                displayValue: num,\n                waitingForNewValue: true\n            })\n            return;\n        }\n        if (value === 'abs') {\n            const num = this.posAndNeg(display, previous).toString();\n            this.setState({\n                displayValue: num,\n            })\n            return;\n        }\n        if (this.state.waitingForNewValue && !this.state.previousValue) {\n            console.log(`here!`)\n            this.setState({\n                operation: value,\n                waitingForNewValue: true,\n            })\n            return;\n        }\n        if (!operate) {\n            this.setState({\n                operation: value,\n                waitingForNewValue: true,\n            })\n            return;\n        }\n        switch (operate) {\n\n            case 'addition':\n\n                const sum = this.addNumbers(previous, display).toString();\n\n                this.setState({\n                    displayValue: sum,\n                    previousValue: null,\n                    operation: value,\n                    waitingForNewValue: true,\n                })\n                break;\n\n            case 'subtract':\n\n                const difference = this.subtractNumbers(previous, display).toString();\n\n                this.setState({\n                    displayValue: difference,\n                    previousValue: null,\n                    operation: value,\n                    waitingForNewValue: true,\n                })\n                break;\n\n            case 'divide':\n\n                const quotient = this.divideNumbers(previous, display).toString();\n\n                this.setState({\n                    displayValue: quotient,\n                    previousValue: null,\n                    operation: value,\n                    waitingForNewValue: true,\n                })\n\n                break;\n\n            case 'multiply':\n\n                const product = this.multiplyNumbers(previous, display).toString();\n\n                this.setState({\n                    displayValue: product,\n                    previousValue: null,\n                    operation: value,\n                    waitingForNewValue: true,\n                })\n\n                break;\n\n            case 'equal':\n\n                this.setState({\n                    previousValue: this.state.displayValue,\n                    operation: value,\n                    waitingForNewValue: true,\n                })\n                break;\n\n\n            default:\n\n                break;\n        }\n    };\n    handleClearButton = () => {\n        const display = this.state.displayValue\n\n        if (this.state.operation === 'equal' && !this.state.previousValue) {\n            return (\n                <Buttons className='col-3' name={'AC'} value={'AC'} getValue={this.handleButtonEvent} />\n            )\n        }\n        if (display) {\n            return (\n                <Buttons className='col-3' name={'C'} value={'C'} getValue={this.handleButtonEvent} />\n            )\n        }\n        else {\n            return (\n                <Buttons className='col-3' name={'AC'} value={'AC'} getValue={this.handleButtonEvent} />\n            )\n        }\n\n    }\n    handleDynamicDisplay = () => {\n        const length = this.state.displayValue.length;\n        if (length >= 11 && length < 13) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto display-3 text-light p-1 col-12'} value={this.state.displayValue} />\n        } else if (length >= 13 && length < 16) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto display-4 text-light p-1 col-12'} value={this.state.displayValue} />\n        } else if (length >= 16 && length < 21) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto h1 text-light p-1 col-12'} value={this.state.displayValue} />\n        } else if (length >= 21 && length < 26) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto h2 text-light p-1 col-12'} value={this.state.displayValue} />\n        } else if (length >= 26 && length < 30) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto h3 text-light p-1 col-12'} value={this.state.displayValue} />\n        } else if (length >= 30 && length < 35) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto h4 text-light p-1 col-12'} value={this.state.displayValue} />\n        } else if (length >= 35 && length < 40) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto h5 text-light p-1 col-12'} value={this.state.displayValue} />\n        } else if (length >= 40 && length < 49) {\n            return <Display className={'text-right py-3 px-3 bg-dark overflow-auto h6 text-light p-1 col-12'} value={this.state.displayValue} />\n    }else {\n            return <Display className={'text-right py-2 px-3 bg-dark overflow-auto display-2 text-light p-1 col-12'} value={this.state.displayValue} />\n        }\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        console.log('previous state: ', prevState)\n        console.log('current state: ', this.state)\n    }\n    render() {\n        return (\n            <>\n                <div className='row'>\n                    {this.handleDynamicDisplay()}\n                    {this.handleClearButton()}\n                    <Buttons className='col-3' name={'%'} value={'percent'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'±'} value={'abs'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'÷'} color={'orange'} value='divide' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'7'} value={'7'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'8'} value={'8'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'9'} value={'9'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'×'} color={'orange'} value='multiply' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'4'} value={'4'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'5'} value={'5'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'6'} value={'6'} getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'−'} color={'orange'} value='subtract' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'1'} value='1' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'2'} value='2' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'3'} value='3' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'+'} color={'orange'} value='addition' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-6' name={'0'} value='0' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'.'} value='decimal' getValue={this.handleButtonEvent} />\n                    <Buttons className='col-3' name={'='} color={'orange'} value='equal' getValue={this.handleButtonEvent} />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Calculator;","import React, { Component } from 'react';\nimport Calculator from './containers/calculator';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <div className='container' style={{ 'margin': 'auto', 'width': '50%' }}>\n          <Calculator />\n        </div>\n      </>\n    );\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}